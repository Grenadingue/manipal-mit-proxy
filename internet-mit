#!/bin/bash

proxy_ip="172.16.19.10"
proxy_port=80

command_exists()
{
    command -v $1 >/dev/null 2>&1
}

set_proxy()
{
    if command_exists gsettings; then
	echo "Setting global proxy settings using 'gsettings'..."
	gsettings set org.gnome.system.proxy mode "manual"
	gsettings set org.gnome.system.proxy.http host $proxy_ip
	gsettings set org.gnome.system.proxy.http port $proxy_port
	gsettings set org.gnome.system.proxy.https host $proxy_ip
	gsettings set org.gnome.system.proxy.https port $proxy_port
	gsettings set org.gnome.system.proxy.ftp host $proxy_ip
	gsettings set org.gnome.system.proxy.ftp port $proxy_port
    else
	echo "Warning: gsettings not found" >&2
    fi

    if command_exists git; then
	echo "Setting user proxy settings for 'git'..."
	git config --global http.proxy $proxy_ip:$proxy_port
	git config --global https.proxy $proxy_ip:$proxy_port
	git config --global ftp.proxy $proxy_ip:$proxy_port
    else
	echo "Warning: git not found" >&2
    fi
}

unset_proxy()
{
    if command_exists gsettings; then
	echo "Unsetting global proxy settings using 'gsettings'..."
	gsettings set org.gnome.system.proxy mode "auto"
    fi

    if command_exists git; then
	echo "Unsetting user proxy settings for 'git'..."
	git config --global --unset http.proxy
	git config --global --unset https.proxy
	git config --global --unset ftp.proxy
    fi

    echo "Manual proxy disabled, default routes re-setted. Exiting..."
}

exec_loop()
{
    quit_msg="Type 'q' or 'quit' for a clean exit"

    printf "%s\n" \
	   "Manual proxy enabled, redirecting http, https, and ftp requests to $proxy_ip:$proxy_port" \
	   "Be careful, a ^C doesn't reset the proxy settings !" \
	   "$quit_msg"

    while read -r line; do
	if [ "$line" == "q" ] || [ "$line" == "quit" ]; then
	    unset_proxy
	    exit 0
	fi
	printf "%s\n" "$quit_msg"
    done
}

set_proxy
exec_loop

exit 1
